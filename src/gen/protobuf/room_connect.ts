// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts"
// @generated from file protobuf/room.proto (package water_ring, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import {
  CheckLivenessRequest,
  CheckLivenessResponse,
  CloseRoomRequest,
  CloseRoomResponse,
  CreateRoomRequest,
  CreateRoomResponse,
  JoinRoomRequest,
  JoinRoomResponse,
  WaitForUserJoinRequest,
  WaitForUserJoinResponse,
} from "./room_pb.ts";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * サービス定義
 *
 * @generated from service water_ring.RoomService
 */
export const RoomService = {
  typeName: "water_ring.RoomService",
  methods: {
    /**
     * 部屋を作成
     *
     * @generated from rpc water_ring.RoomService.CreateRoom
     */
    createRoom: {
      name: "CreateRoom",
      I: CreateRoomRequest,
      O: CreateRoomResponse,
      kind: MethodKind.Unary,
    },
    /**
     * 部屋にユーザーが参加するのを待つ
     *
     * @generated from rpc water_ring.RoomService.WaitForUserJoin
     */
    waitForUserJoin: {
      name: "WaitForUserJoin",
      I: WaitForUserJoinRequest,
      O: WaitForUserJoinResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * @generated from rpc water_ring.RoomService.JoinRoom
     */
    joinRoom: {
      name: "JoinRoom",
      I: JoinRoomRequest,
      O: JoinRoomResponse,
      kind: MethodKind.Unary,
    },
    /**
     * 部屋を閉じる
     *
     * @generated from rpc water_ring.RoomService.CloseRoom
     */
    closeRoom: {
      name: "CloseRoom",
      I: CloseRoomRequest,
      O: CloseRoomResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc water_ring.RoomService.CheckLiveness
     */
    checkLiveness: {
      name: "CheckLiveness",
      I: CheckLivenessRequest,
      O: CheckLivenessResponse,
      kind: MethodKind.Unary,
    },
  },
} as const;
